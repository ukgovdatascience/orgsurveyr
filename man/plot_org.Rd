% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_org.R
\name{plot_org}
\alias{plot_org}
\title{Simple organisation plot}
\usage{
plot_org(x, fill_var = "depth", df = NULL, is_circular = FALSE)
}
\arguments{
\item{x}{organisation as a tidygraph object (tidygraph)}

\item{fill_var}{the variable to use as a fill colour for units.  Will either be a metric_id in df or
a column in the nodes data frame in the tidygraph object  (metric name)}

\item{df}{a data frame in org_tall_df format ie summarised metrics for the units in the network
as generated by calc_summary_df. See \code{\link{orgsurveyr-data-formats}} for more information.
If NULL the fill_var comes from the nodes data frame in the tidygraph object (data frame)}

\item{is_circular}{whether to make the dendrogram circular which is useful for larger organisations (logical)}
}
\value{
ggraph object
}
\description{
Bare bones function to plot an organisation style dendrogram from a tidygraph object.
}
\details{
Note that the recommended way to plot organisations is using the ggraph package.  Some examples of how to do this
are included in the vignettes.  This simple function is provided as a convenience for new users and to use in examples.

DEV NOTE: in ggplot2 version 3.0.0 tidyeval is available so should be able to use this rather than aes_string
}
\examples{
library(tidygraph)
library(dplyr)
library(ggraph)

set.seed(1236)
tg2 <- create_realistic_org(4,3, prob=0.3, delete_units = TRUE) \%>\%
   simulate_unit_size
tg2

# plot the organisation using the depth of the unit in the organisation as fill colour
\dontrun{
plot_org(tg2, fill_var='depth') #normal dendrogram
plot_org(tg2, fill_var='depth', is_circular=TRUE) #circular dendrogram

# build on ggraph object using ggraph functionality - ie add unit sizes
plot_org(tg2, fill_var='depth') + geom_node_text(aes(label=unit_size), color='white')
}

# can also include aggregated unit information from calc_summary_df

# simulate individual data and summarise
tg2_indiv_df <- tg2 \%>\%
   simulate_individuals_df() \%>\%
   mutate(test_var2 = purrr::map_dbl(individual_id, ~rnorm(1, 20,3)))

summary_df <- calc_summary_df(tg2, tg2_indiv_df, NULL, c('test_var', 'test_var2'), TRUE)

# plot the organisation using the cumulative mean of the individual variables
\dontrun{
plot_org(x=tg2, fill_var = 'test_var', df=summary_df)
plot_org(x=tg2, fill_var = 'test_var2', df=summary_df)
}
}
